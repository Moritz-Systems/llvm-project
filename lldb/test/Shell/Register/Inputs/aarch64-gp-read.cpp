#include <cstdint>

struct alignas(16) vec_t {
  uint64_t a, b;
};

int main() {
  constexpr vec_t vecs[] = {
    { 0x08090A0B0C0D0E0F, 0x0001020304050607 },
    { 0x090A0B0C0D0E0F10, 0x0102030405060708 },
    { 0x0A0B0C0D0E0F1011, 0x0203040506070809 },
    { 0x0B0C0D0E0F101112, 0x030405060708090A },
    { 0x0C0D0E0F10111213, 0x0405060708090A0B },
    { 0x0D0E0F1011121314, 0x05060708090A0B0C },
    { 0x0E0F101112131415, 0x060708090A0B0C0D },
    { 0x0F10111213141516, 0x0708090A0B0C0D0E },
    { 0x1011121314151617, 0x08090A0B0C0D0E0F },
    { 0x1112131415161718, 0x090A0B0C0D0E0F10 },
    { 0x1213141516171819, 0x0A0B0C0D0E0F1011 },
    { 0x131415161718191A, 0x0B0C0D0E0F101112 },
    { 0x1415161718191A1B, 0x0C0D0E0F10111213 },
    { 0x15161718191A1B1C, 0x0D0E0F1011121314 },
    { 0x161718191A1B1C1D, 0x0E0F101112131415 },
    { 0x1718191A1B1C1D1E, 0x0F10111213141516 },
    { 0x18191A1B1C1D1E1F, 0x1011121314151617 },
    { 0x191A1B1C1D1E1F20, 0x1112131415161718 },
    { 0x1A1B1C1D1E1F2021, 0x1213141516171819 },
    { 0x1B1C1D1E1F202122, 0x131415161718191A },
    { 0x1C1D1E1F20212223, 0x1415161718191A1B },
    { 0x1D1E1F2021222324, 0x15161718191A1B1C },
    { 0x1E1F202122232425, 0x161718191A1B1C1D },
    { 0x1F20212223242526, 0x1718191A1B1C1D1E },
    { 0x2021222324252627, 0x18191A1B1C1D1E1F },
    { 0x2122232425262728, 0x191A1B1C1D1E1F20 },
    { 0x2223242526272829, 0x1A1B1C1D1E1F2021 },
    { 0x232425262728292A, 0x1B1C1D1E1F202122 },
    { 0x2425262728292A2B, 0x1C1D1E1F20212223 },
    { 0x25262728292A2B2C, 0x1D1E1F2021222324 },
    { 0x262728292A2B2C2D, 0x1E1F202122232425 },
    { 0x2728292A2B2C2D2E, 0x1F20212223242526 },
  };

  asm volatile(
    "ld1      {v0.2d,  v1.2d,  v2.2d,  v3.2d},  [%0], #64\n\t"
    "ld1      {v4.2d,  v5.2d,  v6.2d,  v7.2d},  [%0], #64\n\t"
    "ld1      {v8.2d,  v9.2d,  v10.2d, v11.2d}, [%0], #64\n\t"
    "ld1      {v12.2d, v13.2d, v14.2d, v15.2d}, [%0], #64\n\t"
    "ld1      {v16.2d, v17.2d, v18.2d, v19.2d}, [%0], #64\n\t"
    "ld1      {v20.2d, v21.2d, v22.2d, v23.2d}, [%0], #64\n\t"
    "ld1      {v24.2d, v25.2d, v26.2d, v27.2d}, [%0], #64\n\t"
    "ld1      {v28.2d, v29.2d, v30.2d, v31.2d}, [%0], #64\n\t"
    "sub      %0, %0, #512\n\t"
    "\n\t"
    // we can't easily overwrite sp, so put the value on stack instead,
    // and back x29 up while at it
    "ldr      x0,       [%0, #248]\n\t"
    "stp      x29, x0,  [sp, #-16]\n\t"
    "\n\t"
    "ldp      x0,  x1,  [%0]\n\t"
    "ldp      x2,  x3,  [%0, #16]\n\t"
    "ldp      x4,  x5,  [%0, #32]\n\t"
    "ldp      x6,  x7,  [%0, #48]\n\t"
    "ldp      x10, x11, [%0, #80]\n\t"
    "ldp      x12, x13, [%0, #96]\n\t"
    "ldp      x14, x15, [%0, #112]\n\t"
    "ldp      x16, x17, [%0, #128]\n\t"
    "ldp      x18, x19, [%0, #144]\n\t"
    "ldp      x20, x21, [%0, #160]\n\t"
    "ldp      x22, x23, [%0, #176]\n\t"
    "ldp      x24, x25, [%0, #192]\n\t"
    "ldp      x26, x27, [%0, #208]\n\t"
    "ldp      x28, x29, [%0, #224]\n\t"
    "ldr      x30,      [%0, #240]\n\t"
    "ldp      x8,  x9,  [%0, #64]\n\t"
    "\n\t"
    "brk      #0\n\t"
    "\n\t"
    // restore x29, discard the other value
    "ldp      x29, xzr, [sp, #-16]\n\t"
    :
    : "r"(vecs)
    : "x0", "x1", "x2", "x3", "x4", "x5", "x6", "x7",
      "x9", "x10", "x11", "x12", "x13", "x14", "x15",
      "x16", "x17", "x18", "x19", "x20", "x21", "x22",
      "x23", "x24", "x25", "x26", "x27", "x28", "x30",
      "v0", "v1", "v2", "v3", "v4", "v5", "v6", "v7",
      "v8", "v9", "v10", "v11", "v12", "v13", "v14", "v15",
      "v16", "v17", "v18", "v19", "v20", "v21", "v22", "v23",
      "v24", "v25", "v26", "v27", "v28", "v29", "v30", "v31"
  );

  return 0;
}
